//------------------------------------------- Mixins

//============ Prefix ============
@mixin prefix($declarations, $prefixes: ()) {
    @each $property, $value in $declarations {
      @each $prefix in $prefixes {
        #{'-' + $prefix + '-' + $property}: $value;
      }
  
      // Output standard non-prefixed declaration
      #{$property}: $value;
    }
}


// first Movile
@mixin media-up($breakpoint) {
    @media screen and (min-width: map-get($media_queries, $breakpoint)) {
        @content;
    }
}


// el mapa de fw esta creado en _variables.scss
// la hacer modificaciones tener en cuenta _properties.scss
@mixin defaultFont($d, $ff: 'init', $fz: 'init', $fw: 'init', $lh: 'init', $ta: 'init', $c: 'init', $fs: 'init'){

  @if $d == 1 {
    @include allProperty($ff, $fz, $fw, $lh, $ta, $c, $fs);
  } @else {
    @include partiallyProperty($ff, $fz, $fw, $lh, $ta, $c, $fs);
  }

}

// Mixin para agregar todas las propiedades de las fuentes
@mixin allProperty($ff, $fz, $fw, $lh, $ta, $c, $fs){
  @if $ff == 'init' {$ff: $roboto}
  @if $fz == 'init' {$fz: $font-p}
  @if $fw == 'init' {$fw: regular}
  @if $ta == 'init' {$ta: left}
  @if $c == 'init' {$c: $text-color}
  @if $fs == 'init' {$fs: normal}

  $FzContent: inspect($fz);
  @if ends-with($FzContent, 'px') {
    @if $lh == 'init'{
      $lh: $fz + 2;
    }
  } @else{
    @if $lh == "init"{
      $lh: initial;
    }
  }

  @if map-has-key($mapFW, $fw) {
    $fw: map-get($mapFW, $fw)
  }
  
  //Normal properties
  font-family: $ff;
  font-size: $fz;
  line-height: $lh;
  font-weight: $fw;
  text-align: $ta;
  font-style: $fs;
  color: $c;

}

// Mixin para agregar propiedades ralativas a las fuentes
@mixin partiallyProperty($ff, $fz, $fw, $lh, $ta, $c, $fs){
  @if map-has-key($mapFW, $fw) {
    $fw: map-get($mapFW, $fw)
  }
  
  @if $ff != 'init' {font-family: $ff}
  @if $fz != 'init' {font-size: $fz}
  @if $lh != 'init' {line-height: $lh}
  @if $fw != 'init' {font-weight: $fw}
  @if $ta != 'init' {text-align: $ta}
  @if $c != 'init' {color: $c}
  @if $fs != 'init' {font-style: $fs}

}


//Funcion parar encontrar caracteres de un string
@function ends-with($string, $find) {
  @if (str-index($string, $find) == (str-length($string) - str-length($find) + 1)) {
    @return true;
  } @else {
    @return false;
  }
}

//extend para Neomorfismo
%neoShadow{
  box-shadow: 5px 5px 10px rgba(166, 171, 189, 0.48),
    -5px -5px 10px rgba(250, 251, 255, 1);
}

//============ End Defaut Fonts Properties ============